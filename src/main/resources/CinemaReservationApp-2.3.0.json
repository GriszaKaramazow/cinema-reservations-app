{
	"info": {
		"_postman_id": "81bce7b9-ee4d-41cc-b290-3db8d862b09b",
		"name": "CinemaReservationApp",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "ANONYMOUS",
			"item": [
				{
					"name": "/login [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "daa0eb28-7138-470c-846d-46fee654a93b",
								"exec": [
									"pm.test(\"Set JWT\", function() {\r",
									"    let headerValue = pm.response.headers.get(\"Authorization\")\r",
									"    pm.globals.set(\"token\", headerValue);\r",
									"});\r",
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"maria.kozak@gmail.com\",\n\t\"password\": \"mariakozak\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/login",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/signup [400]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "91cbabe7-7c95-4168-a6d1-18ee92b8cbbe",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Appropriate message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"user {username=diana.czajka@poczta.pl} was found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"diana.czajka@poczta.pl\",\n    \"password\": \"dianaczajka\",\n    \"firstName\": \"Diana\",\n    \"lastName\": \"Czajka\",\n    \"birthDate\": \"1984-07-02\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "/signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "91cbabe7-7c95-4168-a6d1-18ee92b8cbbe",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Username matches\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.username).to.eql(\"maria.kozak@gmail.com\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"maria.kozak@gmail.com\",\n    \"password\": \"mariakozak\",\n    \"firstName\": \"Maria\",\n    \"lastName\": \"Kozak\",\n    \"birthDate\": \"2000-10-10\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/signup",
							"host": [
								"{{url}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "/myaccount [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "550d1e0c-1010-42ec-a7fb-01ab9d815bef",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/myaccount",
							"host": [
								"{{url}}"
							],
							"path": [
								"myaccount"
							]
						}
					},
					"response": []
				},
				{
					"name": "/register [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d65389d6-f4fe-43b0-869c-07f0a930c67d",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"magdalena.lewandowska@gmail.com\",\n\t\"password\": \"magdalenalewandowska\",\n    \"firstName\": \"Magdalena\",\n    \"lastName\": \"Lewandowska\",\n    \"login\": \"mlewandowska\",\n    \"birthDate\": \"1969-06-09\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "20f5a6e1-8b13-43ae-80e3-f23cb0c324f9",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/client",
							"host": [
								"{{url}}"
							],
							"path": [
								"client"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "501619e2-c91b-4713-aa89-09f21851674d",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/movie",
							"host": [
								"{{url}}"
							],
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie?category=familijny",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d29467a-466d-478a-a9a8-9383c42a669f",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/movie?category=familijny",
							"host": [
								"{{url}}"
							],
							"path": [
								"movie"
							],
							"query": [
								{
									"key": "category",
									"value": "familijny"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a770ede7-dba3-493f-abcd-6c360ca4ca92",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Joker\",\n    \"category\": \"Dramat\",\n    \"length\": 122,\n    \"description\": \"Historia jednego z cieszących się najgorszą sławą superprzestępców uniwersum DC — Jokera. Przedstawiony przez Phillipsa obraz śledzi losy kultowego czarnego charakteru, człowieka zepchniętego na margines.\",\n    \"ageLimit\": 15\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/movie",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie?id=2 [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c0e24b11-9ff9-4e18-ac4f-6fbe6740cdd9",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8080/movie?id=2",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"movie"
							],
							"query": [
								{
									"key": "id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a770ede7-dba3-493f-abcd-6c360ca4ca92",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 5,\n    \"title\": \"Jumanji: Przygoda w dżungli\",\n    \"category\": \"Familijny\",\n    \"length\": 123,\n    \"description\": \"Wielki powrót bohaterów „Jumanji: Przygoda w dżungli”! Pierwsza część filmu stała się międzynarodowym przebojem, zarabiając na całym świecie ponad 960 milionów dolarów.\",\n    \"ageLimit\": 8\n}"
						},
						"url": {
							"raw": "localhost:8080/movie",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "/room [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb3ab64e-da15-43b2-9da2-4261cd7ee3f0",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/room",
							"host": [
								"{{url}}"
							],
							"path": [
								"room"
							]
						}
					},
					"response": []
				},
				{
					"name": "/room [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba6282ca-bd9b-4725-b011-fe186909d374",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"capacity\": 200,\n    \"layout\": \"25,25,25,25,25,25,25,25\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/room",
							"host": [
								"{{url}}"
							],
							"path": [
								"room"
							]
						}
					},
					"response": []
				},
				{
					"name": "/room?id=2 [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a47f8fd6-7048-4067-ab18-5319b23e675c",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/room?id=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"room"
							],
							"query": [
								{
									"key": "id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/room [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e6c1a788-4a81-4762-a660-fa6eff9f3792",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 3,\n    \"capacity\": 55,\n    \"layout\": \"11,11,11,11,11\"\n}"
						},
						"url": {
							"raw": "{{url}}/room",
							"host": [
								"{{url}}"
							],
							"path": [
								"room"
							]
						}
					},
					"response": []
				},
				{
					"name": "/session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04f71b44-fb54-4008-9c70-ab170bcb858b",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Seven sessions on the list\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(7);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/session",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "/session?date=2020-04-10",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f0b741b-007d-470c-afdf-aceefd2482ae",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"One session on the list\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/session?date=2020-04-10",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							],
							"query": [
								{
									"key": "date",
									"value": "2020-04-10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/session [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9813dec6-e2bf-42d9-8e55-b3411d5854cf",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"roomId\": 1,\n\t\"movieId\": 3,\n\t\"startDate\": \"2020-04-10\",\n\t\"startTime\": \"21:00:00\",\n\t\"ticketPrice\": 14.99\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url}}/session",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "/session?id=2 [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "344222e6-6318-4912-9662-e39470b8ca3d",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/session?id=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							],
							"query": [
								{
									"key": "id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/session [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b647176-46e7-4941-b5a5-b2fe6473173f",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\" : 1,\n\t\"startDate\": \"2020-04-02\"\n}"
						},
						"url": {
							"raw": "{{url}}/session",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "/ticket [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47d4671f-c360-4924-ae35-75ffd570ab1f",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/ticket",
							"host": [
								"{{url}}"
							],
							"path": [
								"ticket"
							]
						}
					},
					"response": []
				},
				{
					"name": "/ticket?id=8 [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb314a63-ae9a-4a05-b130-2a9e3538c4d7",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/ticket?id=8",
							"host": [
								"{{url}}"
							],
							"path": [
								"ticket"
							],
							"query": [
								{
									"key": "id",
									"value": "8"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/mytickets [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "550d1e0c-1010-42ec-a7fb-01ab9d815bef",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{url}}/mytickets",
							"host": [
								"{{url}}"
							],
							"path": [
								"mytickets"
							]
						}
					},
					"response": []
				},
				{
					"name": "/session/seats?id=6",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65f19988-f226-41d2-8f74-09f0e43fa56a",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/session/seats?id=6",
							"host": [
								"{{url}}"
							],
							"path": [
								"session",
								"seats"
							],
							"query": [
								{
									"key": "id",
									"value": "6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/reservation [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4c900f0-5d15-444c-a92d-14231da1a0ff",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"sessionId\": 6,\n\t\"reservedSeats\": [\n\t\t\t{\n\t\t\t\t\"rowNumber\": 4,\n\t\t\t\t\"seatNumber\": 5,\n\t\t\t\t\"sold\": false\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"rowNumber\": 4,\n\t\t\t\t\"seatNumber\": 6,\n\t\t\t\t\"sold\": false\n\t\t\t}\n\t\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reservation",
							"host": [
								"{{url}}"
							],
							"path": [
								"reservation"
							]
						}
					},
					"response": []
				},
				{
					"name": "/login as maria.kozak@gmail.com (CLIENT)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "daa0eb28-7138-470c-846d-46fee654a93b",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"maria.kozak@gmail.com\",\n\t\"password\": \"mariakozak\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CLIENT",
			"item": [
				{
					"name": "/login as filip.chmielewski@poczta.pl (CLIENT)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "daa0eb28-7138-470c-846d-46fee654a93b",
								"exec": [
									"pm.test(\"Set JWT\", function() {\r",
									"    let headerValue = pm.response.headers.get(\"Authorization\")\r",
									"    pm.globals.set(\"token\", headerValue);\r",
									"});\r",
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"filip.chmielewski@poczta.pl\",\n\t\"password\": \"filipchmielewski\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/myaccount",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "550d1e0c-1010-42ec-a7fb-01ab9d815bef",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Appropriate username\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"filip.chmielewski@poczta.pl\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/myaccount",
							"host": [
								"{{url}}"
							],
							"path": [
								"myaccount"
							]
						}
					},
					"response": []
				},
				{
					"name": "/myaccount [400]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "550d1e0c-1010-42ec-a7fb-01ab9d815bef",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"{username=filip.chmielewski@mail.com} does not correspond to the logged user\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"filip.chmielewski@mail.com\",\r\n    \"password\": null,\r\n    \"encodedPassword\": null,\r\n    \"firstName\": \"Filip\",\r\n    \"lastName\": \"Chmielewski\",\r\n    \"birthDate\": \"1921-08-08\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/myaccount",
							"host": [
								"{{url}}"
							],
							"path": [
								"myaccount"
							]
						}
					},
					"response": []
				},
				{
					"name": "/myaccount",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "550d1e0c-1010-42ec-a7fb-01ab9d815bef",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Birthdate changed\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.birthDate).to.eql(\"1996-10-10\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"filip.chmielewski@poczta.pl\",\r\n    \"password\": null,\r\n    \"encodedPassword\": null,\r\n    \"firstName\": \"Filip\",\r\n    \"lastName\": \"Chmielewski\",\r\n    \"birthDate\": \"1996-10-10\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/myaccount",
							"host": [
								"{{url}}"
							],
							"path": [
								"myaccount"
							]
						}
					},
					"response": []
				},
				{
					"name": "/myaccount",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "550d1e0c-1010-42ec-a7fb-01ab9d815bef",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Birthdate changed\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.birthDate).to.eql(\"1996-10-10\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{url}}/myaccount",
							"host": [
								"{{url}}"
							],
							"path": [
								"myaccount"
							]
						}
					},
					"response": []
				},
				{
					"name": "/register [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d65389d6-f4fe-43b0-869c-07f0a930c67d",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"magdalena.lewandowska@gmail.com\",\n\t\"password\": \"magdalenalewandowska\",\n    \"firstName\": \"Magdalena\",\n    \"lastName\": \"Lewandowska\",\n    \"login\": \"mlewandowska\",\n    \"birthDate\": \"1969-06-09\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04175def-8927-4648-ba65-07afe8fe6610",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/client",
							"host": [
								"{{url}}"
							],
							"path": [
								"client"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "501619e2-c91b-4713-aa89-09f21851674d",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Five movies on the list\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(5);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/movie",
							"host": [
								"{{url}}"
							],
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie?category=familijny",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d29467a-466d-478a-a9a8-9383c42a669f",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Two movies on the list\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/movie?category=familijny",
							"host": [
								"{{url}}"
							],
							"path": [
								"movie"
							],
							"query": [
								{
									"key": "category",
									"value": "familijny"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a770ede7-dba3-493f-abcd-6c360ca4ca92",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Joker\",\n    \"category\": \"Dramat\",\n    \"length\": 122,\n    \"description\": \"Historia jednego z cieszących się najgorszą sławą superprzestępców uniwersum DC — Jokera. Przedstawiony przez Phillipsa obraz śledzi losy kultowego czarnego charakteru, człowieka zepchniętego na margines.\",\n    \"ageLimit\": 15\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/movie",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie?id=2 [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c0e24b11-9ff9-4e18-ac4f-6fbe6740cdd9",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8080/movie?id=2",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"movie"
							],
							"query": [
								{
									"key": "id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a770ede7-dba3-493f-abcd-6c360ca4ca92",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 5,\n    \"title\": \"Jumanji: Przygoda w dżungli\",\n    \"category\": \"Familijny\",\n    \"length\": 123,\n    \"description\": \"Wielki powrót bohaterów „Jumanji: Przygoda w dżungli”! Pierwsza część filmu stała się międzynarodowym przebojem, zarabiając na całym świecie ponad 960 milionów dolarów.\",\n    \"ageLimit\": 8\n}"
						},
						"url": {
							"raw": "localhost:8080/movie",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "/room [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb3ab64e-da15-43b2-9da2-4261cd7ee3f0",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/room",
							"host": [
								"{{url}}"
							],
							"path": [
								"room"
							]
						}
					},
					"response": []
				},
				{
					"name": "/room [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba6282ca-bd9b-4725-b011-fe186909d374",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"capacity\": 200,\n    \"layout\": \"25,25,25,25,25,25,25,25\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/room",
							"host": [
								"{{url}}"
							],
							"path": [
								"room"
							]
						}
					},
					"response": []
				},
				{
					"name": "/room?id=2 [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a47f8fd6-7048-4067-ab18-5319b23e675c",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/room?id=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"room"
							],
							"query": [
								{
									"key": "id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/room [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e6c1a788-4a81-4762-a660-fa6eff9f3792",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 3,\n    \"capacity\": 55,\n    \"layout\": \"11,11,11,11,11\"\n}"
						},
						"url": {
							"raw": "{{url}}/room",
							"host": [
								"{{url}}"
							],
							"path": [
								"room"
							]
						}
					},
					"response": []
				},
				{
					"name": "/session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "752c6177-dbc9-42ea-b8b3-68bf2f99cb3f",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Seven sessions on the list\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(7);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/session",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "/session?date=2020-04-10",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e527748-e9b1-42b3-80df-f6a4c98c4f14",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"One session on the list\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/session?date=2020-04-10",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							],
							"query": [
								{
									"key": "date",
									"value": "2020-04-10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/session [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9813dec6-e2bf-42d9-8e55-b3411d5854cf",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"roomId\": 1,\n\t\"movieId\": 3,\n\t\"startDate\": \"2020-04-10\",\n\t\"startTime\": \"21:00:00\",\n\t\"ticketPrice\": 14.99\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url}}/session",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "/session?id=2 [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "344222e6-6318-4912-9662-e39470b8ca3d",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/session?id=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							],
							"query": [
								{
									"key": "id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/session [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b647176-46e7-4941-b5a5-b2fe6473173f",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\" : 1,\n\t\"startDate\": \"2020-04-02\"\n}"
						},
						"url": {
							"raw": "{{url}}/session",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "/ticket [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47d4671f-c360-4924-ae35-75ffd570ab1f",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/ticket",
							"host": [
								"{{url}}"
							],
							"path": [
								"ticket"
							]
						}
					},
					"response": []
				},
				{
					"name": "/ticket?id=8 [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb314a63-ae9a-4a05-b130-2a9e3538c4d7",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/ticket?id=5",
							"host": [
								"{{url}}"
							],
							"path": [
								"ticket"
							],
							"query": [
								{
									"key": "id",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/mytickets",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "550d1e0c-1010-42ec-a7fb-01ab9d815bef",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Four tickets on the list\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{url}}/mytickets",
							"host": [
								"{{url}}"
							],
							"path": [
								"mytickets"
							]
						}
					},
					"response": []
				},
				{
					"name": "/session/seats?id=6",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65f19988-f226-41d2-8f74-09f0e43fa56a",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Fifty seats on the list\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(50);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/session/seats?id=6",
							"host": [
								"{{url}}"
							],
							"path": [
								"session",
								"seats"
							],
							"query": [
								{
									"key": "id",
									"value": "6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6831adf2-a5d6-4dbb-9e48-d7ebd4411b08",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Two tickets on the list\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"sessionId\": 6,\n\t\"reservedSeats\": [\n\t\t\t{\n\t\t\t\t\"rowNumber\": 4,\n\t\t\t\t\"seatNumber\": 5,\n\t\t\t\t\"sold\": false\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"rowNumber\": 4,\n\t\t\t\t\"seatNumber\": 6,\n\t\t\t\t\"sold\": false\n\t\t\t}\n\t\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reservation",
							"host": [
								"{{url}}"
							],
							"path": [
								"reservation"
							]
						}
					},
					"response": []
				},
				{
					"name": "/reservation [404]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6831adf2-a5d6-4dbb-9e48-d7ebd4411b08",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"session {id=8} was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"sessionId\": 8,\n\t\"reservedSeats\": [\n\t\t\t{\n\t\t\t\t\"rowNumber\": 4,\n\t\t\t\t\"seatNumber\": 5,\n\t\t\t\t\"sold\": false\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"rowNumber\": 4,\n\t\t\t\t\"seatNumber\": 6,\n\t\t\t\t\"sold\": false\n\t\t\t}\n\t\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reservation",
							"host": [
								"{{url}}"
							],
							"path": [
								"reservation"
							]
						}
					},
					"response": []
				},
				{
					"name": "/reservation [400]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f38c8146-c0f0-4127-b529-874c31f154c0",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"seat 5 in row 4 is reserved\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"sessionId\": 6,\n\t\"reservedSeats\": [\n\t\t\t{\n\t\t\t\t\"rowNumber\": 4,\n\t\t\t\t\"seatNumber\": 5,\n\t\t\t\t\"sold\": false\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"rowNumber\": 4,\n\t\t\t\t\"seatNumber\": 6,\n\t\t\t\t\"sold\": false\n\t\t\t}\n\t\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reservation",
							"host": [
								"{{url}}"
							],
							"path": [
								"reservation"
							]
						}
					},
					"response": []
				},
				{
					"name": "/reservation [400]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f38c8146-c0f0-4127-b529-874c31f154c0",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"reserved seat does not correspond to room layout\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"sessionId\": 6,\n\t\"reservedSeats\": [\n\t\t\t{\n\t\t\t\t\"rowNumber\": 6,\n\t\t\t\t\"seatNumber\": 5,\n\t\t\t\t\"sold\": false\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"rowNumber\": 6,\n\t\t\t\t\"seatNumber\": 6,\n\t\t\t\t\"sold\": false\n\t\t\t}\n\t\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reservation",
							"host": [
								"{{url}}"
							],
							"path": [
								"reservation"
							]
						}
					},
					"response": []
				},
				{
					"name": "/reservation [400]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f38c8146-c0f0-4127-b529-874c31f154c0",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"reserved seats should be in the same row\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"sessionId\": 6,\n\t\"reservedSeats\": [\n\t\t\t{\n\t\t\t\t\"rowNumber\": 1,\n\t\t\t\t\"seatNumber\": 5,\n\t\t\t\t\"sold\": false\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"rowNumber\": 3,\n\t\t\t\t\"seatNumber\": 5,\n\t\t\t\t\"sold\": false\n\t\t\t}\n\t\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reservation",
							"host": [
								"{{url}}"
							],
							"path": [
								"reservation"
							]
						}
					},
					"response": []
				},
				{
					"name": "/reservation [400]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f38c8146-c0f0-4127-b529-874c31f154c0",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"reserved seats should be next to each other\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"sessionId\": 6,\n\t\"reservedSeats\": [\n\t\t\t{\n\t\t\t\t\"rowNumber\": 5,\n\t\t\t\t\"seatNumber\": 5,\n\t\t\t\t\"sold\": false\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"rowNumber\": 5,\n\t\t\t\t\"seatNumber\": 7,\n\t\t\t\t\"sold\": false\n\t\t\t}\n\t\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reservation",
							"host": [
								"{{url}}"
							],
							"path": [
								"reservation"
							]
						}
					},
					"response": []
				},
				{
					"name": "/mytickets",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "550d1e0c-1010-42ec-a7fb-01ab9d815bef",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Six tickets on the list\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(6);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{url}}/mytickets",
							"host": [
								"{{url}}"
							],
							"path": [
								"mytickets"
							]
						}
					},
					"response": []
				},
				{
					"name": "/login as marta.fabian@poczta.pl (CLIENT)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "daa0eb28-7138-470c-846d-46fee654a93b",
								"exec": [
									"pm.test(\"Set JWT\", function() {\r",
									"    let headerValue = pm.response.headers.get(\"Authorization\")\r",
									"    pm.globals.set(\"token\", headerValue);\r",
									"});\r",
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"marta.fabian@poczta.pl\",\n\t\"password\": \"martafabian\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/reservation [400]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f38c8146-c0f0-4127-b529-874c31f154c0",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"the user does not meet the age requirements\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"sessionId\": 4,\n\t\"reservedSeats\": [\n\t\t\t{\n\t\t\t\t\"rowNumber\": 6,\n\t\t\t\t\"seatNumber\": 11,\n\t\t\t\t\"sold\": false\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"rowNumber\": 6,\n\t\t\t\t\"seatNumber\": 12,\n\t\t\t\t\"sold\": false\n\t\t\t}\n\t\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reservation",
							"host": [
								"{{url}}"
							],
							"path": [
								"reservation"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "EMPLOYEE",
			"item": [
				{
					"name": "/login as piotr.krakowski@kino.pl (EMPLOYEE)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "daa0eb28-7138-470c-846d-46fee654a93b",
								"exec": [
									"pm.test(\"Set JWT\", function() {\r",
									"    let headerValue = pm.response.headers.get(\"Authorization\")\r",
									"    pm.globals.set(\"token\", headerValue);\r",
									"});\r",
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"piotr.krakowski@kino.pl\",\n\t\"password\": \"piotrkrakowski\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/myaccount",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "550d1e0c-1010-42ec-a7fb-01ab9d815bef",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Username matches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"piotr.krakowski@kino.pl\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/myaccount",
							"host": [
								"{{url}}"
							],
							"path": [
								"myaccount"
							]
						}
					},
					"response": []
				},
				{
					"name": "/myaccount [400]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "550d1e0c-1010-42ec-a7fb-01ab9d815bef",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"{username=admin@cinema.pl} does not correspond to the logged user\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin@cinema.pl\",\r\n    \"password\": null,\r\n    \"encodedPassword\": null,\r\n    \"firstName\": \"Piotr\",\r\n    \"lastName\": \"Krakowski\",\r\n\t\"birthDate\": \"1980-02-20\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/myaccount",
							"host": [
								"{{url}}"
							],
							"path": [
								"myaccount"
							]
						}
					},
					"response": []
				},
				{
					"name": "/myaccount",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "550d1e0c-1010-42ec-a7fb-01ab9d815bef",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Username matches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"piotr.krakowski@kino.pl\");\r",
									"});\r",
									"pm.test(\"Birthdate changed\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.birthDate).to.eql(\"1986-06-09\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"piotr.krakowski@kino.pl\",\r\n    \"password\": null,\r\n    \"encodedPassword\": null,\r\n    \"firstName\": \"Piotr\",\r\n    \"lastName\": \"Krakowski\",    \r\n    \"birthDate\": \"1986-06-09\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/myaccount",
							"host": [
								"{{url}}"
							],
							"path": [
								"myaccount"
							]
						}
					},
					"response": []
				},
				{
					"name": "/myaccount",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "550d1e0c-1010-42ec-a7fb-01ab9d815bef",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Username maches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.username).to.eql(\"piotr.krakowski@kino.pl\");\r",
									"});\r",
									"pm.test(\"Birthdate changed\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.birthDate).to.eql(\"1986-06-09\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{url}}/myaccount",
							"host": [
								"{{url}}"
							],
							"path": [
								"myaccount"
							]
						}
					},
					"response": []
				},
				{
					"name": "/register",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d65389d6-f4fe-43b0-869c-07f0a930c67d",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Username matches\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.username).to.eql(\"magdalena.lewandowska@gmail.com\");",
									"});",
									"pm.test(\"First name matches\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstName).to.eql(\"Magdalena\");",
									"});",
									"pm.test(\"Last name matches\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lastName).to.eql(\"Lewandowska\");",
									"});",
									"pm.test(\"Birth Date matches\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.birthDate).to.eql(\"1969-06-09\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"magdalena.lewandowska@gmail.com\",\n\t\"password\": \"magdalenalewandowska\",\n    \"firstName\": \"Magdalena\",\n    \"lastName\": \"Lewandowska\",\n    \"birthDate\": \"1969-06-09\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04175def-8927-4648-ba65-07afe8fe6610",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Nine clients on the list\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(9);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/client",
							"host": [
								"{{url}}"
							],
							"path": [
								"client"
							]
						}
					},
					"response": []
				},
				{
					"name": "/client?lastName=lis",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04175def-8927-4648-ba65-07afe8fe6610",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"One client on the list\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/client?lastName=lis",
							"host": [
								"{{url}}"
							],
							"path": [
								"client"
							],
							"query": [
								{
									"key": "lastName",
									"value": "lis"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "501619e2-c91b-4713-aa89-09f21851674d",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Five movies on the list\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(5);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/movie",
							"host": [
								"{{url}}"
							],
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie?category=familijny",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d29467a-466d-478a-a9a8-9383c42a669f",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Two movies on the list\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/movie?category=familijny",
							"host": [
								"{{url}}"
							],
							"path": [
								"movie"
							],
							"query": [
								{
									"key": "category",
									"value": "familijny"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "501619e2-c91b-4713-aa89-09f21851674d",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Title matches\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.title).to.eql(\"Joker\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"title\": \"Joker\",\r\n\t\"category\": \"Dramat\",\r\n\t\"length\": 122,\r\n\t\"description\": \"Historia jednego z cieszących się najgorszą sławą superprzestępców uniwersum DC — Jokera. Przedstawiony przez Phillipsa obraz śledzi losy kultowego czarnego charakteru, człowieka zepchniętego na margines.\",\r\n\t\"ageLimit\": 15\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/movie",
							"host": [
								"{{url}}"
							],
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie?id=6",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "501619e2-c91b-4713-aa89-09f21851674d",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/movie?id=6",
							"host": [
								"{{url}}"
							],
							"path": [
								"movie"
							],
							"query": [
								{
									"key": "id",
									"value": "6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie?id=6 [404]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "501619e2-c91b-4713-aa89-09f21851674d",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Appropriate message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"movie {id=6} was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/movie?id=6",
							"host": [
								"{{url}}"
							],
							"path": [
								"movie"
							],
							"query": [
								{
									"key": "id",
									"value": "6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie [404]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a770ede7-dba3-493f-abcd-6c360ca4ca92",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Appropriate message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql(\"movie {id=6} was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 6,\n    \"title\": \"Jumanji: Przygoda w dżungli\",\n    \"category\": \"Familijny\",\n    \"length\": 123,\n    \"description\": \"Wielki powrót bohaterów „Jumanji: Przygoda w dżungli”! Pierwsza część filmu stała się międzynarodowym przebojem, zarabiając na całym świecie ponad 960 milionów dolarów.\",\n    \"ageLimit\": 8\n}"
						},
						"url": {
							"raw": "localhost:8080/movie",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a770ede7-dba3-493f-abcd-6c360ca4ca92",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Age limit changed\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.ageLimit).to.eql(8);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"id\": 5,\n        \"title\": \"Jumanji: Przygoda w dżungli\",\n        \"category\": \"Familijny\",\n        \"length\": 123,\n        \"description\": \"Wielki powrót bohaterów „Jumanji: Przygoda w dżungli”! Pierwsza część filmu stała się międzynarodowym przebojem, zarabiając na całym świecie ponad 960 milionów dolarów.\",\n        \"ageLimit\": 8\n}"
						},
						"url": {
							"raw": "localhost:8080/movie",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"movie"
							]
						}
					},
					"response": []
				},
				{
					"name": "/room",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb3ab64e-da15-43b2-9da2-4261cd7ee3f0",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Four rooms on the list\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(4);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/room",
							"host": [
								"{{url}}"
							],
							"path": [
								"room"
							]
						}
					},
					"response": []
				},
				{
					"name": "/room?capacity=300",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb3ab64e-da15-43b2-9da2-4261cd7ee3f0",
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"One room on the list\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/room?capacity=300",
							"host": [
								"{{url}}"
							],
							"path": [
								"room"
							],
							"query": [
								{
									"key": "capacity",
									"value": "300"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/room",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba6282ca-bd9b-4725-b011-fe186909d374",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Layout matches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.layout).to.eql(\"25,25,25,25,25,25,25,25\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"capacity\": 200,\n    \"layout\": \"25,25,25,25,25,25,25,25\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/room",
							"host": [
								"{{url}}"
							],
							"path": [
								"room"
							]
						}
					},
					"response": []
				},
				{
					"name": "/room [400]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9872c99f-8fb4-458a-bb3d-8820270763fa",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"capacity does not correspond to layout\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"capacity\": 225,\n    \"layout\": \"25,25,25,25,25,25,25,25\"\n}"
						},
						"url": {
							"raw": "{{url}}/room",
							"host": [
								"{{url}}"
							],
							"path": [
								"room"
							]
						}
					},
					"response": []
				},
				{
					"name": "/room [400]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9872c99f-8fb4-458a-bb3d-8820270763fa",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"inappropriate layout format\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"capacity\": 200,\n    \"layout\": \"25 25 25 25 25 25 25 25\"\n}"
						},
						"url": {
							"raw": "{{url}}/room",
							"host": [
								"{{url}}"
							],
							"path": [
								"room"
							]
						}
					},
					"response": []
				},
				{
					"name": "/room?id=5",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8c9eeed-9962-4ed4-a17c-880254eb5ca9",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"One room on the list\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/room?id=5",
							"host": [
								"{{url}}"
							],
							"path": [
								"room"
							],
							"query": [
								{
									"key": "id",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/room?id=5",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a47f8fd6-7048-4067-ab18-5319b23e675c",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/room?id=5",
							"host": [
								"{{url}}"
							],
							"path": [
								"room"
							],
							"query": [
								{
									"key": "id",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/room?id=5 [404]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a47f8fd6-7048-4067-ab18-5319b23e675c",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"room {id=5} was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/room?id=5",
							"host": [
								"{{url}}"
							],
							"path": [
								"room"
							],
							"query": [
								{
									"key": "id",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/room [404]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e6c1a788-4a81-4762-a660-fa6eff9f3792",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"room {id=5} was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 5,\n    \"capacity\": 55,\n    \"layout\": \"11,11,11,11,11\"\n}"
						},
						"url": {
							"raw": "{{url}}/room",
							"host": [
								"{{url}}"
							],
							"path": [
								"room"
							]
						}
					},
					"response": []
				},
				{
					"name": "/room",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e6c1a788-4a81-4762-a660-fa6eff9f3792",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Layout matches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.layout).to.eql(\"11,11,11,11,11\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 3,\n    \"capacity\": 55,\n    \"layout\": \"11,11,11,11,11\"\n}"
						},
						"url": {
							"raw": "{{url}}/room",
							"host": [
								"{{url}}"
							],
							"path": [
								"room"
							]
						}
					},
					"response": []
				},
				{
					"name": "/session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df0a7a4f-59ec-4544-9d4d-2771ad00191b",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Seven sessions on the list\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(7);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/session",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "/session?date=2020-04-10",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "38f6c7c3-5c64-4a00-b39a-ab129a324dad",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"One session on the list\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/session?date=2020-04-10",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							],
							"query": [
								{
									"key": "date",
									"value": "2020-04-10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9813dec6-e2bf-42d9-8e55-b3411d5854cf",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"movieId matches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.movieId).to.eql(3);\r",
									"});\r",
									"pm.test(\"roomId matches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.roomId).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"roomId\": 1,\n\t\"movieId\": 3,\n\t\"startDate\": \"2020-04-10\",\n\t\"startTime\": \"21:00:00\",\n\t\"ticketPrice\": 14.99\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url}}/session",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "/session [404]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9813dec6-e2bf-42d9-8e55-b3411d5854cf",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"movie {id=8} was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"roomId\": 1,\n\t\"movieId\": 8,\n\t\"startDate\": \"2020-04-10\",\n\t\"startTime\": \"21:00:00\",\n\t\"ticketPrice\": 14.99\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url}}/session",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "/session [404]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9813dec6-e2bf-42d9-8e55-b3411d5854cf",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"room {id=9} was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"roomId\": 9,\n\t\"movieId\": 3,\n\t\"startDate\": \"2020-04-10\",\n\t\"startTime\": \"21:00:00\",\n\t\"ticketPrice\": 14.99\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url}}/session",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "/session [400]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9813dec6-e2bf-42d9-8e55-b3411d5854cf",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"start time should be in future\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"roomId\": 1,\n\t\"movieId\": 3,\n\t\"startDate\": \"2000-04-10\",\n\t\"startTime\": \"21:00:00\",\n\t\"ticketPrice\": 14.99\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url}}/session",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "/session?id=8",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "344222e6-6318-4912-9662-e39470b8ca3d",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/session?id=8",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							],
							"query": [
								{
									"key": "id",
									"value": "8"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/session?id=8 [404]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "344222e6-6318-4912-9662-e39470b8ca3d",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/session?id=8",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							],
							"query": [
								{
									"key": "id",
									"value": "8"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/session [404]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b647176-46e7-4941-b5a5-b2fe6473173f",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"session {id=9} was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"id\": 9,\n        \"movieId\": 1,\n        \"roomId\": 4,\n        \"startDate\": \"2020-04-02\",\n        \"startTime\": \"17:00:00\",\n        \"ticketPrice\": 14.99\n}"
						},
						"url": {
							"raw": "{{url}}/session",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "/session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b647176-46e7-4941-b5a5-b2fe6473173f",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 1,\n    \"movieId\": 3,\n    \"roomId\": 1,\n    \"startDate\": \"2020-04-02\",\n    \"startTime\": \"15:00:00\",\n    \"ticketPrice\": 14.99\n}"
						},
						"url": {
							"raw": "{{url}}/session",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "/session [404]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b647176-46e7-4941-b5a5-b2fe6473173f",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"room {id=5} was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 3,\n    \"movieId\": 1,\n    \"roomId\": 5,\n    \"startDate\": \"2020-04-02\",\n    \"startTime\": \"17:00:00\",\n    \"ticketPrice\": 14.99\n}"
						},
						"url": {
							"raw": "{{url}}/session",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "/session [404]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b647176-46e7-4941-b5a5-b2fe6473173f",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"movie {id=7} was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 3,\n    \"movieId\": 7,\n    \"roomId\": 4,\n    \"startDate\": \"2020-04-02\",\n    \"startTime\": \"17:00:00\",\n    \"ticketPrice\": 14.99\n}"
						},
						"url": {
							"raw": "{{url}}/session",
							"host": [
								"{{url}}"
							],
							"path": [
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "/ticket",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47d4671f-c360-4924-ae35-75ffd570ab1f",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Fifteen tickets on the list\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(17);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/ticket",
							"host": [
								"{{url}}"
							],
							"path": [
								"ticket"
							]
						}
					},
					"response": []
				},
				{
					"name": "/ticket?client=filip.chmielewski@poczta.pl",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47d4671f-c360-4924-ae35-75ffd570ab1f",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Fifteen tickets on the list\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(6);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/ticket?client=filip.chmielewski@poczta.pl",
							"host": [
								"{{url}}"
							],
							"path": [
								"ticket"
							],
							"query": [
								{
									"key": "client",
									"value": "filip.chmielewski@poczta.pl"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/ticket?id=8",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb314a63-ae9a-4a05-b130-2a9e3538c4d7",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/ticket?id=8",
							"host": [
								"{{url}}"
							],
							"path": [
								"ticket"
							],
							"query": [
								{
									"key": "id",
									"value": "8"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/ticket?id=18 [404]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb314a63-ae9a-4a05-b130-2a9e3538c4d7",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Appropriate message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"ticket {id=18} was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/ticket?id=18",
							"host": [
								"{{url}}"
							],
							"path": [
								"ticket"
							],
							"query": [
								{
									"key": "id",
									"value": "18"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/session/seats?id=6",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65f19988-f226-41d2-8f74-09f0e43fa56a",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Fifty seats on the list\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(50);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/session/seats?id=6",
							"host": [
								"{{url}}"
							],
							"path": [
								"session",
								"seats"
							],
							"query": [
								{
									"key": "id",
									"value": "6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/reservation [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a74daca6-44ad-4d0c-8fdd-753ca49bc978",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"sessionId\": 6,\n\t\"reservedSeats\": [\n\t\t\t{\n\t\t\t\t\"rowNumber\": 4,\n\t\t\t\t\"seatNumber\": 5,\n\t\t\t\t\"sold\": false\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"rowNumber\": 4,\n\t\t\t\t\"seatNumber\": 6,\n\t\t\t\t\"sold\": false\n\t\t\t}\n\t\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reservation",
							"host": [
								"{{url}}"
							],
							"path": [
								"reservation"
							]
						}
					},
					"response": []
				},
				{
					"name": "/mytickets [403]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "550d1e0c-1010-42ec-a7fb-01ab9d815bef",
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{url}}/mytickets",
							"host": [
								"{{url}}"
							],
							"path": [
								"mytickets"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "222eb9b3-0d41-4813-93c0-5c1e09138238",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f4cf221d-f13b-49a0-9003-00fb455eca35",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}